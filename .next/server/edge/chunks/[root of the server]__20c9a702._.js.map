{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/middleware.js"],"sourcesContent":["import { NextResponse } from 'next/server';\r\n\r\n// This function runs on each request\r\nexport function middleware(request) {\r\n  const path = request.nextUrl.pathname;\r\n\r\n  // Define public paths\r\n  const isPublicPath = path === '/login' || path === '/register' || path === '/';\r\n\r\n  // Dummy check for authentication token\r\n  const token = request.cookies.get('auth-token')?.value || '';\r\n\r\n  // Redirect if authenticated user tries to access login/register\r\n  if (isPublicPath && token) {\r\n    return NextResponse.redirect(new URL('/dashboard', request.url));\r\n  }\r\n\r\n  // Redirect if unauthenticated user tries to access protected routes\r\n  if (!isPublicPath && !token) {\r\n    return NextResponse.redirect(new URL('/login', request.url));\r\n  }\r\n\r\n  // Allow request to continue\r\n  return NextResponse.next();\r\n}\r\n\r\n// Run middleware on specific routes\r\nexport const config = {\r\n  matcher: ['/dashboard/:path*', '/login', '/register'],\r\n};\r\n"],"names":[],"mappings":";;;;AAAA;AAAA;;AAGO,SAAS,WAAW,OAAO;IAChC,MAAM,OAAO,QAAQ,OAAO,CAAC,QAAQ;IAErC,sBAAsB;IACtB,MAAM,eAAe,SAAS,YAAY,SAAS,eAAe,SAAS;IAE3E,uCAAuC;IACvC,MAAM,QAAQ,QAAQ,OAAO,CAAC,GAAG,CAAC,eAAe,SAAS;IAE1D,gEAAgE;IAChE,IAAI,gBAAgB,OAAO;QACzB,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,cAAc,QAAQ,GAAG;IAChE;IAEA,oEAAoE;IACpE,IAAI,CAAC,gBAAgB,CAAC,OAAO;QAC3B,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,QAAQ,GAAG;IAC5D;IAEA,4BAA4B;IAC5B,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAGO,MAAM,SAAS;IACpB,SAAS;QAAC;QAAqB;QAAU;KAAY;AACvD"}}]
}